{
	"info": {
		"_postman_id": "ab6915de-682c-4e3e-b49e-7bf0b537b653",
		"name": "Kolaborasi MusikOnline",
		"description": "## **Collection ini mengandung dokumentasi MusikOnline**\n\n- Folder user berisi dokumen untuk user\n- Folder musisi berisi dokumen untuk musisi\n- Folder produser berisi dokumen untuk produser",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24968335"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Register New User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"message\", \"User registered successfully\");\r",
									"  pm.expect(responseBody).to.have.property(\"user\").to.be.an(\"object\");\r",
									"\r",
									"  const user = responseBody.user;\r",
									"\r",
									"  pm.expect(user).to.have.property(\"user_id\").to.be.a(\"string\");\r",
									"  pm.expect(user).to.have.property(\"username\").to.be.a(\"string\");\r",
									"  pm.expect(user).to.have.property(\"name\").to.be.a(\"string\");\r",
									"  pm.expect(user).to.have.property(\"email\").to.be.a(\"string\");\r",
									"  pm.expect(user).to.have.property(\"role\", \"member\");\r",
									"  pm.expect(user).to.have.property(\"balance\", 0);\r",
									"  pm.expect(user).to.have.property(\"api_hit\", 0);\r",
									"  pm.expect(user).to.have.property(\"createdAt\").to.be.a(\"string\");\r",
									"  pm.expect(user).to.have.property(\"updatedAt\").to.be.a(\"string\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "budiganteng",
									"description": "Username untuk akun user. Panjang username yang diperbolehkan antara 4-20 digit dan username harus unique",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Budi Didi",
									"description": "Nama untuk akun user. Panjang nama yang diperbolehkan antara 4-50 digit.",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Budidi(10)",
									"description": "Password untuk akun user. Password harus memiliki 4-20 karakter, minimal 1 karakter kecil, 1 karakter besar, 1 angka, dan 1 simbol.",
									"type": "text"
								},
								{
									"key": "confirm_password",
									"value": "Budidi(10)",
									"type": "text"
								},
								{
									"key": "email",
									"value": "budidi10@gmail.com",
									"description": "Email untuk akun user.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST}}/api/v1/users/register",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"register"
							]
						},
						"description": "Endpoint ini digunakan untuk melakukan registrasi pengguna baru dalam aplikasi. Saat registrasi berhasil, pengguna akan memiliki akun baru yang dapat digunakan untuk mengakses fitur-fitur yang disediakan."
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"message\", \"Login success\");\r",
									"  pm.expect(responseBody).to.have.property(\"token\").to.be.a(\"string\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "budiganteng",
									"description": "Username dari akun yang ingin dipakai",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Budidi(10)",
									"description": "Password dari akun ayng ingin dipakai",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST}}/api/v1/users/login",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"login"
							]
						},
						"description": "Endpoint untuk melakukan penambahan saldo ke akun pengguna. Perlu diingat bahwa fitur ini memerlukan token yang didapatkan dari login. Return dari endpoint ini adalah berupa token yang diperlukan untuk mengakses fitur-fitur lainnya. Masa aktif token sendiri adalah 1 jam."
					},
					"response": []
				},
				{
					"name": "Listen to Music",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"title\").to.be.a(\"string\");\r",
									"  pm.expect(responseBody).to.have.property(\"url\").to.be.a(\"string\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDIyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzIzODk5MSwiZXhwIjoxNjg3MjQyNTkxfQ.-YVycazh6RmkXIJ7LtTlXdOvCxUcTShhP_gkES0R4ME",
								"description": "Token yang didapat pada saat melakukan login",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/v1/users/listen/R001",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"listen",
								"R001"
							]
						},
						"description": "Endpoint untuk mendapatkan link dari musik yang dicari.\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login.\n- FItur ini berharga 1 api_hit"
					},
					"response": []
				},
				{
					"name": "Give Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"message\", \"Comment posted successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDIyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzIzODk5MSwiZXhwIjoxNjg3MjQyNTkxfQ.-YVycazh6RmkXIJ7LtTlXdOvCxUcTShhP_gkES0R4ME",
								"type": "text",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "comment",
									"value": "Good song!",
									"description": "Comment yang ingin di posting",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST}}/api/v1/users/comment/P022",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"comment",
								"P022"
							]
						},
						"description": "Endpoint untuk menambahkan comment pada proyek yang diinginkan.\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login.\n- FItur ini berharga 1 api_hit"
					},
					"response": []
				},
				{
					"name": "Delete Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.expect(pm.response.text()).to.equal(\"Successfully deleted comment!\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDIyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzIzODk5MSwiZXhwIjoxNjg3MjQyNTkxfQ.-YVycazh6RmkXIJ7LtTlXdOvCxUcTShhP_gkES0R4ME",
								"description": "Token yang didapat pada saat melakukan login",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/v1/users/comment/C021",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"comment",
								"C021"
							]
						},
						"description": "Endpoint yang digunakan user untuk menghapus commentnya sendiri.\n\n\\`\n\nNote:\n\n- User tidak diperbolehkan menghapus comment user lain\n- Fitur ini memerlukan token yang didapatkan dari login.\n- Fitur ini berharga 1 api_hit"
					},
					"response": []
				},
				{
					"name": "Search Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"comments\").to.be.an(\"array\");\r",
									"\r",
									"  const comments = responseBody.comments;\r",
									"\r",
									"  comments.forEach((comment) => {\r",
									"    pm.expect(comment).to.have.property(\"comment_id\").to.be.a(\"string\");\r",
									"    pm.expect(comment).to.have.property(\"project_id\").to.be.a(\"string\");\r",
									"    pm.expect(comment).to.have.property(\"commenter_id\").to.be.a(\"string\");\r",
									"    pm.expect(comment).to.have.property(\"comment\").to.be.a(\"string\");\r",
									"  });\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}/api/v1/users/comment?keyword=",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"comment"
							],
							"query": [
								{
									"key": "keyword",
									"value": ""
								}
							]
						},
						"description": "Endpoint untuk mencari semua comment yang mengandung kata yang diinginkan.\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login.\n- FItur ini berharga 1 api_hit"
					},
					"response": []
				},
				{
					"name": "Get User Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"comments\").to.be.an(\"array\");\r",
									"\r",
									"  const comments = responseBody.comments;\r",
									"\r",
									"  comments.forEach((comment) => {\r",
									"    pm.expect(comment).to.have.property(\"comment_id\").to.be.a(\"string\");\r",
									"    pm.expect(comment).to.have.property(\"project_title\").to.be.a(\"string\");\r",
									"    pm.expect(comment).to.have.property(\"comment\").to.be.a(\"string\");\r",
									"  });\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDIyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzIzODk5MSwiZXhwIjoxNjg3MjQyNTkxfQ.-YVycazh6RmkXIJ7LtTlXdOvCxUcTShhP_gkES0R4ME",
								"type": "text",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/v1/users/comment/UID022",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"comment",
								"UID022"
							]
						},
						"description": "Endpoint untuk mendapatkan semua comment yang milik seorang user.\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login.\n- FItur ini berharga 1 api_hit"
					},
					"response": []
				},
				{
					"name": "Top-up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"message\", \"Top-up successful\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDEyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzM1ODA4NywiZXhwIjoxNjg3MzYxNjg3fQ.LOJmw1e5W5xcH5gnnkMxtAICpeUatowf2SDL_2e6ckQ",
								"type": "default",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "100000",
									"description": "Jumlah saldo yang ingin ditambahkan",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{HOST}}/api/v1/users/topup/UID022",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"topup",
								"UID022"
							]
						},
						"description": "Endpoint untuk melakukan penambahan saldo pengguna.\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login."
					},
					"response": []
				},
				{
					"name": "Recharge",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"message\", \"Recharge successful\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDEyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzM1ODA4NywiZXhwIjoxNjg3MzYxNjg3fQ.LOJmw1e5W5xcH5gnnkMxtAICpeUatowf2SDL_2e6ckQ",
								"type": "default",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/v1/users/recharge/UID022",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"recharge",
								"UID022"
							]
						},
						"description": "Endpoint yang digunakan untuk menambahkan jumlah api_hit akun pengguna. Harga dari api_hit adalah Rp 5.000,00 untuk 200 api_hit. Api_hit diperlukan untuk mengakses beberapa fitur-fitur tertentu.\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login."
					},
					"response": []
				}
			]
		},
		{
			"name": "Musisi",
			"item": [
				{
					"name": "Register Musisi",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\r",
									"    \"message\",\r",
									"    \"Successfully registered as a musician\"\r",
									"  );\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDIyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzIzODk5MSwiZXhwIjoxNjg3MjQyNTkxfQ.-YVycazh6RmkXIJ7LtTlXdOvCxUcTShhP_gkES0R4ME",
								"type": "text",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/v1/musisi/register",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"musisi",
								"register"
							]
						},
						"description": "Endpoint ini digunakan untuk melakukan registrasi sebagai musisi\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan akun user yang telah ada untuk didaftarkan menjadi musisi\n- Fitur ini memerlukan token yang didapatkan dari login"
					},
					"response": []
				},
				{
					"name": "Upload Recording",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"message\", \"Recording uploaded successfully\");\r",
									"  pm.expect(responseBody).to.have.property(\"recording\").that.is.an(\"object\");\r",
									"  pm.expect(responseBody.recording).to.have.property(\"recording_id\");\r",
									"  pm.expect(responseBody.recording).to.have.property(\"project_id\");\r",
									"  pm.expect(responseBody.recording).to.have.property(\"musician_id\");\r",
									"  pm.expect(responseBody.recording).to.have.property(\"title\");\r",
									"  pm.expect(responseBody.recording).to.have.property(\"song_url\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDIyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzIzODk5MSwiZXhwIjoxNjg3MjQyNTkxfQ.-YVycazh6RmkXIJ7LtTlXdOvCxUcTShhP_gkES0R4ME",
								"type": "text",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "song_title",
									"value": "love yourself",
									"description": "Judul Recording",
									"type": "text"
								},
								{
									"key": "project_id",
									"value": "P001",
									"description": "Id Proyek",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST}}/api/v1/musisi/upload",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"musisi",
								"upload"
							]
						},
						"description": "Endpoint untuk musisi mengupload recordingnya\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login.\n- FItur ini berharga 1 api_hit"
					},
					"response": []
				},
				{
					"name": "Get Recording",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"message\", \"Successfully retrieved recordings\");\r",
									"  pm.expect(responseBody).to.have.property(\"recordings\").that.is.an(\"array\");\r",
									"\r",
									"  const recordings = responseBody.recordings;\r",
									"\r",
									"  recordings.forEach((recording) => {\r",
									"    pm.expect(recording).to.have.property(\"recording_id\");\r",
									"    pm.expect(recording).to.have.property(\"project_title\");\r",
									"    pm.expect(recording).to.have.property(\"musician\");\r",
									"    pm.expect(recording).to.have.property(\"title\");\r",
									"    pm.expect(recording).to.have.property(\"song_url\");\r",
									"  });\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDIyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzIzODk5MSwiZXhwIjoxNjg3MjQyNTkxfQ.-YVycazh6RmkXIJ7LtTlXdOvCxUcTShhP_gkES0R4ME",
								"type": "text",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/v1/musisi/recording?title=ducimus",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"musisi",
								"recording"
							],
							"query": [
								{
									"key": "title",
									"value": "ducimus"
								}
							]
						},
						"description": "Endpoint untuk mendapatkan semua recording yang telah diupload user\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login.\n- FItur ini berharga 1 api_hit"
					},
					"response": []
				},
				{
					"name": "Get Detail Recording",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"recording\").that.is.an(\"object\");\r",
									"\r",
									"  const recording = responseBody.recording;\r",
									"\r",
									"  pm.expect(recording).to.have.property(\"recording_id\");\r",
									"  pm.expect(recording).to.have.property(\"project_title\");\r",
									"  pm.expect(recording).to.have.property(\"musician\");\r",
									"  pm.expect(recording).to.have.property(\"title\");\r",
									"  pm.expect(recording).to.have.property(\"song_url\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDIyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzIzODk5MSwiZXhwIjoxNjg3MjQyNTkxfQ.-YVycazh6RmkXIJ7LtTlXdOvCxUcTShhP_gkES0R4ME",
								"type": "text",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/v1/musisi/recording/R021",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"musisi",
								"recording",
								"R021"
							]
						},
						"description": "Endpoint untuk mendapatkan detail dari suatu recording\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login.\n- FItur ini berharga 1 api_hit"
					},
					"response": []
				},
				{
					"name": "Update Recording",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"message\", \"Recording updated successfully\");\r",
									"  pm.expect(responseBody).to.have.property(\"recording\").to.be.an(\"object\");\r",
									"\r",
									"  const recording = responseBody.recording;\r",
									"\r",
									"  pm.expect(recording).to.have.property(\"title\").to.be.a(\"string\");\r",
									"  pm.expect(recording).to.have.property(\"song_url\").to.be.a(\"string\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDIyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzIzODk5MSwiZXhwIjoxNjg3MjQyNTkxfQ.-YVycazh6RmkXIJ7LtTlXdOvCxUcTShhP_gkES0R4ME",
								"type": "text",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "song_title",
									"value": "perfect",
									"description": "Judul baru",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST}}/api/v1/musisi/recording/R021",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"musisi",
								"recording",
								"R021"
							]
						},
						"description": "Endpoint untuk musisi mengupdaterecordingnya\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login.\n- FItur ini berharga 1 api_hit"
					},
					"response": []
				},
				{
					"name": "Delete Recording",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"message\", \"Recording deleted successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDIyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzIzODk5MSwiZXhwIjoxNjg3MjQyNTkxfQ.-YVycazh6RmkXIJ7LtTlXdOvCxUcTShhP_gkES0R4ME",
								"type": "text",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/v1/musisi/recording/R021",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"musisi",
								"recording",
								"R021"
							]
						},
						"description": "Endpoint untuk musisi menghapus recordingnya\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login.\n- FItur ini berharga 1 api_hit"
					},
					"response": []
				}
			]
		},
		{
			"name": "Produser",
			"item": [
				{
					"name": "Register Produser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"message\", \"Successfully registered as a producer\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDEyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzM1ODA4NywiZXhwIjoxNjg3MzYxNjg3fQ.LOJmw1e5W5xcH5gnnkMxtAICpeUatowf2SDL_2e6ckQ",
								"type": "text",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/v1/produser/register",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"produser",
								"register"
							]
						},
						"description": "Endpoint untuk melakukan registrasi sebagai produser\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan akun user yang sudah ada untuk didaftarkan sebagai produser\n- Fitur ini memerlukan token yang didapatkan dari login."
					},
					"response": []
				},
				{
					"name": "Create Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"message\", \"Project registered successfully\");\r",
									"  pm.expect(responseBody).to.have.property(\"project_id\").to.be.a(\"string\");\r",
									"  pm.expect(responseBody).to.have.property(\"title\").to.be.a(\"string\");\r",
									"  pm.expect(responseBody).to.have.property(\"description\").to.be.a(\"string\");\r",
									"  pm.expect(responseBody).to.have.property(\"producer_id\").to.be.a(\"string\");\r",
									"  pm.expect(responseBody).to.have.property(\"createdAt\").to.be.a(\"string\");\r",
									"  pm.expect(responseBody).to.have.property(\"updatedAt\").to.be.a(\"string\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDIyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzIzODk5MSwiZXhwIjoxNjg3MjQyNTkxfQ.-YVycazh6RmkXIJ7LtTlXdOvCxUcTShhP_gkES0R4ME",
								"type": "text",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "Proyek Z",
									"description": "Judul proyek",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Ini proyek Z",
									"description": "keterangan proyek",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST}}/api/v1/produser/project",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"produser",
								"project"
							]
						},
						"description": "Endpoint untuk produser membuat proyek baru\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login.\n- FItur ini berharga 1 api_hit"
					},
					"response": []
				},
				{
					"name": "Delete Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"message\", \"Project post successfully deleted\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDIyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzIzODk5MSwiZXhwIjoxNjg3MjQyNTkxfQ.-YVycazh6RmkXIJ7LtTlXdOvCxUcTShhP_gkES0R4ME",
								"type": "text",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/v1/produser/project/P025",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"produser",
								"project",
								"P025"
							]
						},
						"description": "Endpoint untuk produser menghapus proyeknya\n\n\\`\n\nNote:\n\n- Produser tidak bisa menghapus proyek produser lain\n- Fitur ini memerlukan token yang didapatkan dari login.\n- FItur ini berharga 1 api_hit"
					},
					"response": []
				},
				{
					"name": "Get Projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"page\").to.be.a(\"number\");\r",
									"  pm.expect(responseBody).to.have.property(\"total_pages\").to.be.a(\"number\");\r",
									"  pm.expect(responseBody).to.have.property(\"total_results\").to.be.a(\"number\");\r",
									"  pm.expect(responseBody).to.have.property(\"projects\").to.be.an(\"array\");\r",
									"\r",
									"  const projects = responseBody.projects;\r",
									"\r",
									"  projects.forEach((project) => {\r",
									"    pm.expect(project).to.have.property(\"project_id\").to.be.a(\"string\");\r",
									"    pm.expect(project).to.have.property(\"title\").to.be.a(\"string\");\r",
									"    pm.expect(project).to.have.property(\"description\").to.be.a(\"string\");\r",
									"    pm.expect(project).to.have.property(\"producer_id\").to.be.a(\"string\");\r",
									"    pm.expect(project).to.have.property(\"createdAt\").to.be.a(\"string\");\r",
									"    pm.expect(project).to.have.property(\"updatedAt\").to.be.a(\"string\");\r",
									"  });\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDIyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzIzODk5MSwiZXhwIjoxNjg3MjQyNTkxfQ.-YVycazh6RmkXIJ7LtTlXdOvCxUcTShhP_gkES0R4ME",
								"type": "text",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"url": {
							"raw": "{{HOST}}/api/v1/produser/project?q=",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"produser",
								"project"
							],
							"query": [
								{
									"key": "q",
									"value": ""
								}
							]
						},
						"description": "Endpoint untuk mendapatkan semua proyek dimana user merupakan anggota dari proyek tersebut\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login.\n- FItur ini berharga 1 api_hit"
					},
					"response": []
				},
				{
					"name": "Invite Musisi",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"  pm.response.to.be.json;\r",
									"\r",
									"  const responseBody = pm.response.json();\r",
									"\r",
									"  pm.expect(responseBody).to.have.property(\"message\", \"The musician has been successfully invited to the project\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDIyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzIzODk5MSwiZXhwIjoxNjg3MjQyNTkxfQ.-YVycazh6RmkXIJ7LtTlXdOvCxUcTShhP_gkES0R4ME",
								"type": "text",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "project_id",
									"value": "P001",
									"description": "Id Proyek",
									"type": "text"
								},
								{
									"key": "user_id",
									"value": "UID022",
									"description": "Id user yang diinvite",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST}}/api/v1/produser/invite",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"produser",
								"invite"
							]
						},
						"description": "Endpoint untuk produser mengundang musisi untuk bergabung di proyeknya\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login.\n- FItur ini berharga 1 api_hit"
					},
					"response": []
				},
				{
					"name": "uploadPoster",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Upload poster successfully\", function () {\r",
									"  pm.sendRequest(function (err, response) {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.jsonBody({ message: \"Poster uploaded successfully\" });\r",
									"  });\r",
									"});\r",
									"\r",
									"pm.test(\"Project not found\", function () {\r",
									"  pm.sendRequest(function (err, response) {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.response.to.have.jsonBody({ message: \"Project Not Found\" });\r",
									"  });\r",
									"});\r",
									"\r",
									"pm.test(\"Error during upload\", function () {\r",
									"  pm.sendRequest(function (err, response) {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.response.to.have.jsonBody({ message: pm.expect.something() });\r",
									"  });\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiVUlEMDEyIiwidXNlcm5hbWUiOiJidWRpZ2FudGVuZyIsImlhdCI6MTY4NzM1ODA4NywiZXhwIjoxNjg3MzYxNjg3fQ.LOJmw1e5W5xcH5gnnkMxtAICpeUatowf2SDL_2e6ckQ",
								"type": "default",
								"description": "Token yang didapat pada saat melakukan login"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "project_id",
									"value": "P001",
									"description": "Id proyek",
									"type": "text"
								},
								{
									"key": "poster",
									"description": "Poster",
									"type": "file",
									"src": "/C:/Users/Nicklaus/Downloads/kobo.jpg"
								}
							]
						},
						"url": {
							"raw": "{{HOST}}/api/v1/produser/uploadPoster",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"produser",
								"uploadPoster"
							]
						},
						"description": "Endpoint untuk produser mengupload poster proyeknya\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login.\n- FItur ini berharga 1 api_hit"
					},
					"response": []
				},
				{
					"name": "getPoster",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"File found - should return 200 and send the file\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"  pm.response.to.be.header(\"Content-Type\", \"image/jpeg\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}/api/v1/produser/poster/P001",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"api",
								"v1",
								"produser",
								"poster",
								"P001"
							]
						},
						"description": "Endpoint untuk mendapatkan poster suatu proyek\n\n\\`\n\nNote:\n\n- Fitur ini memerlukan token yang didapatkan dari login.\n- FItur ini berharga 1 api_hit"
					},
					"response": []
				}
			]
		}
	]
}